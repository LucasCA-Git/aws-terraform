name: Terraform CI/CD

on:
  push:
    branches:
      - main  # ou a branch que você deseja monitorar
  workflow_dispatch:  # Permite a execução manual do workflow

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5 

      - name: Terraform Init
        run: terraform init
        working-directory: ./ec2

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./ec2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./ec2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

  destroy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Apenas executa quando chamado manualmente

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5 

      - name: Terraform Init
        run: terraform init
        working-directory: ./ec2

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./ec2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
